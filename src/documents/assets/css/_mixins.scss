@mixin clearfix {
  visibility: hidden;
  display: block;
  font-size: 0;
  content: " ";
  clear: both;
  height: 0;
}

@mixin background-size($width, $height) {
  -webkit-background-size: $width $height;
  -moz-background-size: $width $height;
  background-size: $width $height;
}

@mixin background-cover {
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

@mixin border-radius ( $radius ) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
  -webkit-background-clip: padding-box;
  -moz-background-clip: padding;
  background-clip: padding-box;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin gradient($url, $repeat, $from, $to) {
  background-color: $to;
  background-image: url($url);
  background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from), to($to));
  background-image: -webkit-linear-gradient($from, $to);
  background-image:    -moz-linear-gradient($from, $to);
  background-position: 0 0;
  background-repeat: repeat-$repeat;
}

/* max-width media queries */
@mixin max-width($point) {
  @media screen and (max-width: $point) { @content; }
}

/* max-width media queries */
@mixin min-width($point) {
  @media screen and (min-width: $point) { @content; }
}

/* range media queries */
@mixin width-range($min, $max) {
  @media screen and (min-width: $min) and (max-width: $max) { @content; }
}